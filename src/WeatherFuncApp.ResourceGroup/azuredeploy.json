{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appInsightsName": {
      "type": "string"
    },
    "appInsightsLocation": {
      "type": "string",
      "allowedValues": [
        "westus2",
        "eastus"
      ],
      "defaultValue": "westus2"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "hostingPlanName": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "BatchSize": {
      "type": "int",
      "defaultValue": 200
    },
    "MaxRecordCount": {
      "type": "int",
      "defaultValue": 50000
    },
    "databaseAccountName": {
      "type": "string",
      "defaultValue": "weatherfuncapp"
    },
    "apiType": {
      "type": "string",
      "defaultValue": "SQL"
    },
    "offerType": {
      "type": "string",
      "defaultValue": "Standard"
    }
  },
  "variables": {
    "storageAccountName": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "storageAccount"
      },
      "kind": "Storage"
    },
    {
      "name": "[parameters('appInsightsName')]",
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "location": "[parameters('appInsightsLocation')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "name": "[parameters('databaseAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('databaseAccountName')]",
        "databaseAccountOfferType": "[parameters('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          },
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 1
          }
        ]
      }
    },
    {
      /* 
      * Azure Functions App
      */
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "MSDEPLOY_RENAME_LOCKED_FILES",
              "value": 1
            },
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('microsoft.insights/components/', parameters('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "AzureStorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "BatchSize",
              "value": "[parameters('BatchSize')]"
            },
            {
              "name": "MaxRecordCount",
              "value": "[parameters('MaxRecordCount')]"
            },
            {
              "name": "queueConn",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "HttpProcessorUrl",
              "value": "[concat('https://', parameters('FunctionAppName'), '.azurewebsites.net/api/QueueWorkHttp')]"
            },
            {
              "name": "GetWeatherQueueDisabled",
              "value": "true"
            },
            {
              "name": "GetWeatherQueueWriteToQueueDisabled",
              "value": "true"
            },
            {
              "name": "GetWeatherQueueWriteToCosmosDbDisabled",
              "value": "false"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "appName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "databaseAccountName": {
      "type": "string",
      "value": "[parameters('databaseAccountName')]"
    }
  }
}
